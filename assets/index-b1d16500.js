import{c as T,_ as v}from"./GoatAppMulticall-69d7de92.js";import{gZ as y,bN as A,bO as F,gY as E,bX as h,g_ as G,g$ as R,h0 as I,bs as x}from"./index-e33bfe5b.js";const C=v;class M{constructor(s,e){this.web3=s,this.chain=e}async fetchAllBalances(s,e,a,n,r){const i=new this.web3.eth.Contract(C,this.chain.appMulticallContractAddress),l=y(),p=[],f=[];for(const t of e)if(A(t))f.push(t);else if(F(t))p.push(t);else throw new Error("Token type unsupported");const B=T(f,l),b=T([...n,...a],l),m=[];b.forEach(t=>{m.push({method:i.methods.getBoostOrGovBalance(t.map(o=>o.earnContractAddress),r).call,params:{from:"0x0000000000000000000000000000000000000000"}})}),B.forEach(t=>{m.push({method:i.methods.getTokenBalances(t.map(o=>o.address),r).call,params:{from:"0x0000000000000000000000000000000000000000"}})}),m.push({method:this.web3.eth.getBalance,params:r});const u=await E(this.web3,m),d={tokens:[],govVaults:[],boosts:[]};let c=0,k=0;for(let t=0;t<b.length;t++){for(let o=0;o<u[c].length;o++){const w=u[c][o];k<n.length?d.boosts.push(this.boostFormatter(s,w,n[k])):d.govVaults.push(this.govVaultFormatter(s,w,a[k-n.length])),k++}c++}for(const t of B){const o=u[c].map((w,g)=>this.erc20TokenFormatter(w,t[g]));d.tokens=d.tokens.concat(o),c++}for(const t of p){const o=this.nativeTokenFormatter(u[c],t);d.tokens.push(o),c++}return d}erc20TokenFormatter(s,e){const a=new h(s);return{tokenAddress:e.address,amount:a.shiftedBy(-e.decimals)}}nativeTokenFormatter(s,e){const a=new h(s);return{tokenAddress:e.address,amount:a.shiftedBy(-e.decimals)}}govVaultFormatter(s,e,a){const n=G(s,a.id),r=R(s,a.id),i=new h(e.balance),l=new h(e.rewards);return{vaultId:a.id,balance:i.shiftedBy(-n.decimals),rewards:l.shiftedBy(-r.decimals)}}boostFormatter(s,e,a){const n=I(s,a.id),r=x(s,a.id),i=new h(e.balance),l=new h(e.rewards);return{boostId:a.id,balance:i.shiftedBy(-n.decimals),rewards:l.shiftedBy(-r.decimals)}}}export{M as BalanceAPI};
