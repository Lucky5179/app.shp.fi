import{c as y,_ as V}from"./GoatAppMulticall-69d7de92.js";import{gX as b,gY as w,p as A,P as u,bX as m}from"./index-e33bfe5b.js";const v=V;class P{constructor(t,a){this.web3=t,this.chain=a}async fetchAllContractData(t,a,e,s,n){const c=new this.web3.eth.Contract(v,this.chain.appMulticallContractAddress),f=b(this.chain.id),B=y(n,f),k=y(e,f),F=y(a,f),I=y(s,f),p=[];B.forEach(o=>{p.push({method:c.methods.getBoostInfo(o.map(r=>r.earnContractAddress)).call,params:{from:"0x0000000000000000000000000000000000000000"}})}),F.forEach(o=>{p.push({method:c.methods.getVaultInfo(o.map(r=>r.earnContractAddress)).call,params:{from:"0x0000000000000000000000000000000000000000"}})}),k.forEach(o=>{p.push({method:c.methods.getGovVaultInfo(o.map(r=>r.earnContractAddress)).call,params:{from:"0x0000000000000000000000000000000000000000"}})}),I.forEach(o=>{p.push({method:c.methods.getMultistrategyInfo(o.map(r=>r.earnContractAddress)).call,params:{from:"0x0000000000000000000000000000000000000000"}})});const g=await w(this.web3,p),d={boosts:[],govVaults:[],standardVaults:[],multistrategyVaults:[]};let i=0;for(const o of B){const r=g[i].map((l,h)=>this.boostFormatter(t,l,o[h]));d.boosts=d.boosts.concat(r),i++}for(const o of F){const r=g[i].map((l,h)=>this.standardVaultFormatter(t,l,o[h]));d.standardVaults=d.standardVaults.concat(r),i++}for(const o of k){const r=g[i].map((l,h)=>this.govVaultFormatter(t,l,o[h]));d.govVaults=d.govVaults.concat(r),i++}for(const o of I){const r=g[i].map((l,h)=>this.multistrategyVaultFormatter(t,l,o[h]));d.multistrategyVaults=d.multistrategyVaults.concat(r),i++}return d}standardVaultFormatter(t,a,e){const s=A(t,e.id),n=u(t,s.chainId,s.earnContractAddress),c=u(t,s.chainId,s.depositTokenAddress);return{id:e.id,balance:new m(a.balance).shiftedBy(-c.decimals),pricePerFullShare:new m(a.pricePerFullShare).shiftedBy(-n.decimals),strategy:a.strategy}}govVaultFormatter(t,a,e){const s=A(t,e.id),n=u(t,s.chainId,s.depositTokenAddress);return{id:e.id,totalSupply:new m(a.totalSupply).shiftedBy(-n.decimals)}}multistrategyVaultFormatter(t,a,e){const s=A(t,e.id),n=u(t,s.chainId,s.earnContractAddress),c=u(t,s.chainId,s.depositTokenAddress);return{id:e.id,totalAssets:new m(a.totalAssets).shiftedBy(-c.decimals),pricePerFullShare:new m(a.pricePerFullShare).shiftedBy(-n.decimals)}}boostFormatter(t,a,e){const s=u(t,e.chainId,e.earnedTokenAddress),n=A(t,e.vaultId),c=u(t,n.chainId,n.depositTokenAddress);return{id:e.id,totalSupply:new m(a.totalSupply).shiftedBy(-c.decimals),rewardRate:new m(a.rewardRate).shiftedBy(-s.decimals),periodFinish:a.periodFinish==="0"?null:new Date(parseInt(a.periodFinish)*1e3),isPreStake:a.isPreStake}}}export{P as ContractDataAPI};
